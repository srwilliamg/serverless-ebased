{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CreateCardEBasedLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/williamSalazar-dev-create-card-function"
      }
    },
    "CreateGiftEBasedLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/williamSalazar-dev-create-gift-function"
      }
    },
    "CreateClientEBasedLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/williamSalazar-dev-create-client-function"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "williamSalazar",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/williamSalazar-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/williamSalazar-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CreateCardQueue",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CreateGiftQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "williamSalazar",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CreateCardEBasedLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/williamSalazar/dev/1671654379920-2022-12-21T20:26:19.920Z/williamSalazar.zip"
        },
        "Handler": "handlers/create-card.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "williamSalazar-dev-create-card-function",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "project",
            "Value": "ebased"
          }
        ],
        "Environment": {
          "Variables": {
            "CLIENTS_TABLE": "williamSalazar-dev-client-table"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CreateCardEBasedIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateCardEBasedIamRoleLambdaExecution",
        "CreateCardEBasedLogGroup"
      ]
    },
    "CreateGiftEBasedLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/williamSalazar/dev/1671654379920-2022-12-21T20:26:19.920Z/williamSalazar.zip"
        },
        "Handler": "handlers/create-gift.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "williamSalazar-dev-create-gift-function",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "project",
            "Value": "ebased"
          }
        ],
        "Environment": {
          "Variables": {
            "CLIENTS_TABLE": "williamSalazar-dev-client-table"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CreateGiftEBasedIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateGiftEBasedIamRoleLambdaExecution",
        "CreateGiftEBasedLogGroup"
      ]
    },
    "CreateClientEBasedLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/williamSalazar/dev/1671654379920-2022-12-21T20:26:19.920Z/williamSalazar.zip"
        },
        "Handler": "handlers/create-client.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "williamSalazar-dev-create-client-function",
        "MemorySize": 1024,
        "Timeout": 6,
        "Tags": [
          {
            "Key": "project",
            "Value": "ebased"
          }
        ],
        "Environment": {
          "Variables": {
            "CLIENTS_TABLE": "williamSalazar-dev-client-table",
            "CLIENTS_TOPIC_NAME": "williamSalazar-dev-client-topic",
            "CLIENTS_TOPIC_ARN": {
              "Ref": "ClientCreateTopic"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "CreateClientEBasedIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateClientEBasedIamRoleLambdaExecution",
        "CreateClientEBasedLogGroup"
      ]
    },
    "CreateCardEBasedLambdaVersion4K8nE6IqEnwYJHGa1IBuBzksbSYgqAfIJbJx9sA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateCardEBasedLambdaFunction"
        },
        "CodeSha256": "6FLgv9y66FudFrY+hFYZWDlwQj14QWDpQNISEINDce8="
      }
    },
    "CreateGiftEBasedLambdaVersionXqs2eXiFeQiDeRnfltcMjcyE87xmax70Kyjbow8XU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateGiftEBasedLambdaFunction"
        },
        "CodeSha256": "6FLgv9y66FudFrY+hFYZWDlwQj14QWDpQNISEINDce8="
      }
    },
    "CreateClientEBasedLambdaVersionZYMF1vx6TpeFjb7kL3nHzXQzRRe2PZHcF6OsFDIcyfU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateClientEBasedLambdaFunction"
        },
        "CodeSha256": "6FLgv9y66FudFrY+hFYZWDlwQj14QWDpQNISEINDce8="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-williamSalazar",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceClient": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "client",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodClientOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceClient"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodClientPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceClient"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateClientEBasedLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateClientEBasedLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1671654373946": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodClientOptions",
        "ApiGatewayMethodClientPost"
      ]
    },
    "CreateClientEBasedLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateClientEBasedLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateCardEBasedEventSourceMappingSQSCreateCardQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "CreateCardEBasedIamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CreateCardQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateCardEBasedLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "CreateGiftEBasedEventSourceMappingSQSCreateGiftQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "CreateGiftEBasedIamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CreateGiftQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateGiftEBasedLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "CreateCardEBasedIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "williamSalazar",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/williamSalazar-dev-create-card-function:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CreateCardQueue",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ClientsTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "williamSalazar",
              "dev",
              "CreateCardEBased",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "CreateGiftEBasedIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "williamSalazar",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/williamSalazar-dev-create-gift-function:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "CreateGiftQueue",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ClientsTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "williamSalazar",
              "dev",
              "CreateGiftEBased",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "CreateClientEBasedIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "williamSalazar",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/williamSalazar-dev-create-client-function:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Ref": "ClientCreateTopic"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ClientsTable",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "williamSalazar",
              "dev",
              "CreateClientEBased",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "ClientsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "williamSalazar-dev-client-table",
        "AttributeDefinitions": [
          {
            "AttributeName": "dni",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "dni",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "ClientCreateTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Client Created Topic",
        "TopicName": "williamSalazar-dev-client-created-topic",
        "Subscription": [
          {
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "CreateCardQueue",
                "Arn"
              ]
            }
          },
          {
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "CreateGiftQueue",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "CreateCardQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "williamSalazar-dev-create-card-queue"
      }
    },
    "CreateCardQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "SQS:*"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "CreateCardQueue",
                  "Arn"
                ]
              },
              "Principal": {
                "AWS": [
                  {
                    "Ref": "AWS::AccountId"
                  }
                ]
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  "*"
                ]
              },
              "Action": [
                "SQS:SendMessage"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "CreateCardQueue",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Ref": "ClientCreateTopic"
                    }
                  ]
                }
              }
            }
          ]
        },
        "Queues": [
          {
            "Ref": "CreateCardQueue"
          }
        ]
      }
    },
    "CreateGiftQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "williamSalazar-dev-create-gift-queue"
      }
    },
    "CreateGiftQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "SQS:*"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "CreateGiftQueue",
                  "Arn"
                ]
              },
              "Principal": {
                "AWS": [
                  {
                    "Ref": "AWS::AccountId"
                  }
                ]
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  "*"
                ]
              },
              "Action": [
                "SQS:SendMessage"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "CreateGiftQueue",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": [
                    {
                      "Ref": "ClientCreateTopic"
                    }
                  ]
                }
              }
            }
          ]
        },
        "Queues": [
          {
            "Ref": "CreateGiftQueue"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-williamSalazar-dev-ServerlessDeploymentBucketName"
      }
    },
    "CreateCardEBasedLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateCardEBasedLambdaVersion4K8nE6IqEnwYJHGa1IBuBzksbSYgqAfIJbJx9sA"
      },
      "Export": {
        "Name": "sls-williamSalazar-dev-CreateCardEBasedLambdaFunctionQualifiedArn"
      }
    },
    "CreateGiftEBasedLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateGiftEBasedLambdaVersionXqs2eXiFeQiDeRnfltcMjcyE87xmax70Kyjbow8XU"
      },
      "Export": {
        "Name": "sls-williamSalazar-dev-CreateGiftEBasedLambdaFunctionQualifiedArn"
      }
    },
    "CreateClientEBasedLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateClientEBasedLambdaVersionZYMF1vx6TpeFjb7kL3nHzXQzRRe2PZHcF6OsFDIcyfU"
      },
      "Export": {
        "Name": "sls-williamSalazar-dev-CreateClientEBasedLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-williamSalazar-dev-ServiceEndpoint"
      }
    }
  }
}